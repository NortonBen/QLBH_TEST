@using QuanLyBanHang.Models;
@model QuanLyBanHang.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Layout/_Layout_Admin.cshtml";
    var category = (new DataContext()).Category.ToList();
}
<script src="~/Assets/Admin/plugins/tinymce/tinymce.min.js"></script>
<script>
    tinymce.init({
        selector: "textarea",  // change this value according to your HTML
        plugins: "media",
        media_live_embeds: true
    });
</script>
<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2>
                    New Product
                </h2>
                <ul class="header-dropdown m-r--5">
                    <a href="javascript:void(0);" style="position: relative; top: 4px;"><li class="material-icons">search</li></a>
                    <li class="dropdown">
                        <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                            <i class="material-icons">more_vert</i>
                        </a>
                        <ul class="dropdown-menu pull-right">
                            <li><a href="@Url.Action("Create", new { Action ="Create" })">New Product</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
            <div class="body table-responsive">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">Categores</label> 
                            <div class="col-md-8">
                                <div class="form-line">
                                    <select name="categores" class="form-control show-select" multiple>
                                        @foreach (Category item in category)
                                        {
                                            <option value="@item.Id">@item.name</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control",@img="data" } })
                                    @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
                                </div>
                            </div>
                              <div class="col-md-3">
                                <button type="button" onclick="open_get_data_media('data')" class="btn btn-success">Select</button>  
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.describe, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.describe, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.describe, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.detail, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                <div class="form-line">
                                    @if (Model == null)
                                    {
                                        <textarea name="detail"></textarea>
                                    }
                                    else
                                    {
                                        <textarea name="detail" value="@Model.detail"></textarea>
                                    }
                                    @Html.ValidationMessageFor(model => model.detail, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                <div class="form-line">
                                    @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                <div class="form-line">
                                    <select class="form-control" name="status">
                                        <option value="0">sell</option>
                                        <option value="1">not sell</option>
                                    </select>
                                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <input type="hidden" name="extension" value="" />

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
</div>
<link href="~/Assets/Admin/plugins/jquery-modal/css/jquery.modal.min.css" rel="stylesheet" />
<script src="~/Assets/Admin/plugins/jquery-modal/js/jquery.modal.min.js"></script>
<script>
    jQuery(document).ready(function ($) {
        $('.show-select').selectpicker({
            size: 12
        });
    })
</script>